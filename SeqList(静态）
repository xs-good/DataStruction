#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#define MAX 10
typedef int DataType;
typedef struct
{
	DataType data[MAX];
	int size;
}SeqList;
void InitSeqList(SeqList* L)
{
	L->size = 0;
}
void PushBack(SeqList* L,DataType elem)
{
	if (L->size == MAX)
	{
		return;
	}
	L->data[L->size] = elem;
	L->size++;
}
void PrintSeqList(SeqList* L)
{
	if (L->size == 0)
	{
		return;
	}
	int i = 0;
	for (i = 0; i < L->size; i++)
	{
		printf("%d ", L->data[i]);
	}
	printf("\n");
}
void PopBack(SeqList* L)
{
	if (L->size == 0)
	{
		return;
	}
	L->size--;
}
void PushFront(SeqList* L,DataType elem)
{
	if (L->size == MAX)
	{
		return;
	}
	int i = 0;
	for (i = L->size - 1; i >= 0; i--)
	{
		L->data[i+1] = L->data[i];
	}
	L->data[0] = elem;
	L->size++;
}
void PopFront(SeqList* L)
{
	if (L->size == 0)
	{
		return;
	}
	int i = 0;
	for (i = 0; i < L->size; i++)
	{
		L->data[i] = L->data[i+1];
	}
	L->size--;
}
void InsertSeqList(SeqList* L, int pos, DataType elem)
{
	if (L->size == MAX)
	{
		return;
	}
	int i = 0;
	for (i = L->size - 1; i >= pos; i--)
	{
		L->data[i + 1] = L->data[i];
	}
  L->data[pos]=elem;
	L->size++;
}
int main()
{
	SeqList L;
	InitSeqList(&L);
	PushBack(&L, 1);
	PushBack(&L, 2);
	PushBack(&L, 3);
	PrintSeqList(&L);
	InsertSeqList(&L, 2, 2);
	PrintSeqList(&L);
	PopFront(&L);
	PrintSeqList(&L);
	return 0;
}
